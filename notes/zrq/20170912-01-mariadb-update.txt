#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#



# -----------------------------------------------------
# Install git client.
#[root@virtual]

    dnf \
        install -y \
        git

# -----------------------------------------------------
# Create our local settings.
#[user@virtual]

    if [ ! -e "${HOME:?}/cosmopterix.settings" ]
    then
        cat > "${HOME:?}/cosmopterix.settings" << EOF
COSMOPTERIX_HOME=${HOME:?}/cosmopterix
COSMOPTERIX_CODE=\${COSMOPTERIX_HOME:?}/github
EOF
    fi

# -----------------------------------------------------
# Clone our source code.
#[user@virtual]

    source "${HOME:?}/cosmopterix.settings"

    if [ ! -e "$(dirname ${COSMOPTERIX_CODE:?})" ]
    then
        mkdir -p "$(dirname ${COSMOPTERIX_CODE:?})"
    fi
    
    pushd "$(dirname ${COSMOPTERIX_CODE:?})"

        if [ -e "$(basename ${COSMOPTERIX_CODE:?})" ]
        then
            pushd "$(basename ${COSMOPTERIX_CODE:?})"
                git pull
            popd
        else    
            git clone 'git@github.com:ivoa/cosmopterix.git' "$(basename ${COSMOPTERIX_CODE:?})"
        fi
    popd
    
# -----------------------------------------------------
# Remove existing containers and images.
#[user@virtual]

    docker rm -v $(docker stop $(docker ps -aq))

    docker rmi -f $(docker images -q)

# -----------------------------------------------------
# Build our container images.
#[user@virtual]

    source "${HOME:?}/cosmopterix.settings"
    pushd "${COSMOPTERIX_CODE:?}"

        pushd docker

            docker build \
                --tag "cosmopterix/fedora:26-1.0" \
                --tag "cosmopterix/fedora:latest" \
                fedora/26

            docker build \
                --tag "cosmopterix/mariadb:10.2-1.0" \
                --tag "cosmopterix/mariadb:latest" \
                --tag "cosmopterix/mariadb-base:10.2-1.0" \
                --tag "cosmopterix/mariadb-base:latest" \
                mariadb/base

            docker build \
                --tag "cosmopterix/mariadb-test:10.2-1.0" \
                --tag "cosmopterix/mariadb-test:latest" \
                mariadb/test

        popd
    popd

# -------------------------------------------------------------------------------------------
# Create our 'waitlog' function.
#[user@virtual]

    waitlog()
        {
        local name=${1:?Name required}
        local text=${2:?Text required}
        sed -r '/'${text}'/q' <( exec docker logs --follow "${name}" ); kill $! 2> /dev/null
        }

# -------------------------------------------------------------------------------------------
# Test our MariaDB container.
#[user@virtual]

    docker run \
        --detach \
        --name 'mariadb-test' \
       'cosmopterix/mariadb-test:10.2-1.0'

    waitlog 'mariadb-test' 'OKGO'

    docker exec \
        --tty \
        --interactive \
        'mariadb-test' \
        'mariadb-client'

        SELECT version() ;

            +----------------+
            | version()      |
            +----------------+
            | 10.2.8-MariaDB |
            +----------------+
            
        --
        -- SELECT FROM (subquery)
        SELECT
            id
        FROM
            (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                ID < 10
            ) AS sample
        WHERE
            id >= 5
        ;

        --
        -- SELECT FROM table WHERE IN (subquery)
        SELECT
            id
        FROM
            alpha_source
        WHERE
            id >= 5
        AND
            id IN (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                ID < 10
            )
        ;

        --
        -- WITH (sample) SELECT FROM sample
        WITH sample AS
            (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                ID < 10
            )
        SELECT
            id
        FROM
            sample
        WHERE
            id >= 5
        ;

        --
        -- WITH (sample) SELECT FROM table WHERE IN (SELECT FROM sample)
        WITH sample AS
            (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                ID < 10
            )
        SELECT
            id
        FROM 
            alpha_source
        WHERE
            alpha_source.id IN 
                (
                SELECT
                    id
                FROM
                    sample
                WHERE
                    ID >= 5
                )
        ;

        --
        -- WITH (sample) SELECT FROM table, (SELECT FROM sample) WHERE equals
        WITH sample AS
            (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                ID < 10
            )
        SELECT
            alpha_source.id
        FROM
            alpha_source,
            (
            SELECT
                id
            FROM
                sample
            WHERE
                ID >= 5
            ) AS subsample
        WHERE
            alpha_source.id = subsample.id
        ;

        --
        -- WITH (sample) SELECT FROM table JOIN (SELECT FROM sample) ON equals
        WITH sample AS
            (
            SELECT
                id
            FROM
                alpha_source
            WHERE
                id < 10
            )
        SELECT
            alpha_source.id
        FROM
            alpha_source
        JOIN
            (
            SELECT
                id
            FROM
                sample
            WHERE
                id >= 5
            ) AS subsample
        ON
            alpha_source.id = subsample.id
        ;


        --
        -- WITH (sample), (subsample) SELECT FROM table JOIN subsample ON equals
        WITH sample AS
            (
            SELECT
                id AS sampid
            FROM
                alpha_source
            WHERE
                ID < 10
            ),
        subsample AS
            (
            SELECT
                sampid AS joinid
            FROM
                sample
            WHERE
                sampid >= 5
            )
        SELECT
            id
        FROM
            alpha_source
        JOIN
            subsample
        ON
            id = joinid
        ;

    \q


# -----------------------------------------------------
# Add our secret function.
#[user@virtual]

    vi "${HOME:?}/secret.sh"

        ....
        ....
        ....

    source "${HOME:?}/secret.sh"
    secret 'frog'

# -----------------------------------------------------
# Push our new images.
#[user@virtual]

    docker login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass)

    docker push 'cosmopterix/fedora:26-1.0'
    docker push 'cosmopterix/mariadb:10.2-1.0'
    docker push 'cosmopterix/mariadb-base:10.2-1.0'
    docker push 'cosmopterix/mariadb-test:10.2-1.0'

    docker push 'cosmopterix/fedora:latest'
    docker push 'cosmopterix/mariadb:latest'
    docker push 'cosmopterix/mariadb-base:latest'
    docker push 'cosmopterix/mariadb-test:latest'

